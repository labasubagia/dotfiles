# this playbook is used to load ssh keys from sops
# make sure `age` key exists in ~/.config/sops/age/keys.txt, sops installed
# for new generation keys, see ./ssh.yml

---
- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    title_prefix: SSH_SOPS
    secret_file: "{{ playbook_dir }}/../../home/secrets.yaml"

  pre_tasks:
    - name: "{{ title_prefix }} > install requirements"
      command: |
        ansible-galaxy collection install community.general community.sops
      register: req
      changed_when: '"Nothing to do" not in req.stdout'

  tasks:
    - name: "{{ title_prefix }} > load global config"
      set_fact:
        global_config: "{{ lookup('file', playbook_dir + '/../../config.json') | from_json }}"

    - name: "{{ title_prefix }} > load config"
      set_fact:
        age_key: "{{ global_config['age']['key_path'] }}"
        dir: "{{ global_config['ssh']['dir_path'] }}"
        keys: "{{ global_config['ssh']['keys']  }}"

    - name: "{{ title_prefix }} > load secrets"
      community.sops.load_vars:
        age_keyfile: "{{ age_key }}"
        file: "{{ secret_file }}"
        name: secrets

    - name: "{{ title_prefix }} > make directory"
      file:
        path: "{{ dir }}"
        state: directory

    - name: "{{ title_prefix }} > make private keys"
      copy:
        content: "{{ secrets['ssh_keys'][item.name]['private'] }}"
        dest: "{{ dir }}/id_ed25519_{{ item.name }}"
        mode: "0600"
      with_items: "{{ keys }}"

    - name: "{{ title_prefix }} > make public keys"
      copy:
        content: "{{ secrets['ssh_keys'][item.name]['public'] }}"
        dest: "{{ dir }}/id_ed25519_{{ item.name }}.pub"
      with_items: "{{ keys }}"

    - name: "{{ title_prefix }} > make config"
      community.general.ssh_config:
        host: "{{ item.host }}"
        hostname: "{{ item.host }}"
        identity_file: "{{ dir }}/id_ed25519_{{ item.name }}"
        ssh_config_file: "{{ dir }}/config"
      with_items: "{{ keys }}"

    - name: "{{ title_prefix }} > config replace /home/<user>"
      ansible.builtin.replace:
        path: "{{ dir }}/config"
        regexp: '\/home\/[^\/]+'
        replace: '~'
