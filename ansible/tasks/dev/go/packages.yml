---
- name: Setup Go Package
  vars:
    is_remove: false

    go_package_dir: "{{ ansible_env.HOME }}/go"
    go_package_bin_dir: "{{ go_package_dir }}/bin"

    pkgs:
      # development
      - url: golang.org/x/tools/gopls
        name: gopls
        version: latest
      - url: github.com/cweill/gotests/gotests
        name: gotests
        version: v1.6.0
      - url: github.com/fatih/gomodifytags
        name: gomodifytags
        version: v1.16.0
      - url: github.com/josharian/impl
        name: impl
        version: v1.1.0
      - url: github.com/haya14busa/goplay/cmd/goplay
        name: goplay
        version: v1.0.0
      - url: github.com/go-delve/delve/cmd/dlv
        name: dlv
        version: latest
      - url: github.com/golangci/golangci-lint/cmd/golangci-lint
        name: golangci-lint
        version: latest
      - url: honnef.co/go/tools/cmd/staticcheck
        name: staticcheck
        version: latest

      # optional tools
      - url: github.com/derailed/k9s
        name: k9s
        version: latest
        state: absent
      - url: github.com/go-task/task/v3/cmd/task
        name: task
        version: latest
        state: absent

  block:
    - name: Check go executable path
      ansible.builtin.stat:
        path: "{{ go_executable }}"
      register: go

    - name: Go executable exists
      when: go.stat.exists
      block:
        - name: Setup Install
          when: not is_remove
          block:
            - name: Install global packages
              when: (item.state | default('present')) == 'present'
              ansible.builtin.command: "{{ go_executable }} install {{ item.url }}@{{ item.version | default('latest') }}"
              args:
                creates: "{{ go_package_bin_dir }}/{{ item.name }}"
              with_items: "{{ pkgs }}"

            - name: Remove absent global packages
              when: (item.state | default('present')) == 'absent'
              ansible.builtin.file:
                path: "{{ go_package_bin_dir }}/{{ item.name }}"
                state: absent
              with_items: "{{ pkgs }}"

        - name: Setup Remove
          when: is_remove
          block:
            - name: Remove global packages
              ansible.builtin.file:
                path: "{{ go_package_bin_dir }}/{{ item.name }}"
                state: absent
              with_items: "{{ pkgs }}"

            - name: Clean
              ansible.builtin.command: "{{ go_executable }} clean -modcache"
              register: go_clean
              changed_when: go_clean.stdout != ''
