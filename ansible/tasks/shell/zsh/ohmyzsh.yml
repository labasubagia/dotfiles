---
- name: Setup oh my zsh
  vars:
    is_remove: false
    is_reset_when_remove: true

    tmp_dir: "/tmp"
    script_url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    script_path: "{{ tmp_dir }}/ohmyzsh-install.sh"
    installed_path: "{{ ansible_env.HOME }}/.oh-my-zsh"

    shell_file: "{{ ansible_env.HOME }}/.zshrc"

  block:
    - name: Setup oh my zsh > Setup Install
      when: not is_remove
      block:

        - name: Setup oh my zsh > Download installation script
          ansible.builtin.get_url:
            url: "{{ script_url }}"
            dest: "{{ script_path }}"
            mode: 'u+x'

        - name: Setup oh my zsh > Execute script
          ansible.builtin.command: "{{ script_path }} --unattended"
          args:
            creates: "{{ installed_path }}"

        - name: Setup oh my zsh > Install plugins
          block:
            - name: Setup oh my zsh > Plugin get zsh-autosuggestions
              ansible.builtin.git:
                repo: https://github.com/zsh-users/zsh-autosuggestions
                dest: "{{ installed_path }}/custom/plugins/zsh-autosuggestions"
                version: v0.7.0

            - name: Setup oh my zsh > Plugin get zsh-syntax-highlighting
              ansible.builtin.git:
                repo: https://github.com/zsh-users/zsh-syntax-highlighting
                dest: "{{ installed_path }}/custom/plugins/zsh-syntax-highlighting"
                version: '0.8.0'

            - name: Setup oh my zsh > Update plugin
              ansible.builtin.replace:
                path: "{{ shell_file }}"
                regexp: 'plugins=\(([^)]*)\)'
                replace: 'plugins=(git zsh-autosuggestions zsh-syntax-highlighting)'

    - name: Setup oh my zsh > Setup Remove
      when: is_remove
      block:
        - name: Setup oh my zsh > get bash
          ansible.builtin.command: which bash
          register: bash
          changed_when: false

        - name: Setup oh my zsh > Remove
          ansible.builtin.shell:
            cmd: |
              set -o pipefail
              echo y | sh {{ installed_path }}/tools/uninstall.sh
            executable: "{{ bash.stdout }}"
          args:
            removes: "{{ installed_path }}"

        - name: Setup oh my zsh > Make it plain .zshrc
          when: is_reset_when_remove
          ansible.builtin.copy:
            dest: "{{ shell_file }}"
            content: ""
            mode: '0644'
            force: true
