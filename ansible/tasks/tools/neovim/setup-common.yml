---
- name: Setup neovim
  vars:
    is_remove: true

    url: https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz
    tmp_path: /tmp/nvim-linux64.tar.gz
    install_path: /opt
    bin_path: "{{ install_path }}/nvim-linux64"

    shell_files:
      - ~/.bashrc
      - ~/.zshrc
    shell_marker: "# {mark} ANSIBLE MANAGED BLOCK: NEOVIM"
    shell_bin_path: |
      if [ -d "{{ bin_path }}/bin" ] ; then
        export PATH="$PATH:{{ bin_path }}/bin"
      fi

  block:
    - name: Setup Install
      when: not is_remove
      block:
        - name: Download from URL
          become: true
          ansible.builtin.get_url:
            url: "{{ url }}"
            dest: "{{ tmp_path }}"
            mode: '0755'

        - name: Extract tarball
          become: true
          ansible.builtin.unarchive:
            src: "{{ tmp_path }}"
            dest: "{{ install_path }}"

        - name: Add to PATH
          ansible.builtin.blockinfile:
            path: "{{ shell_file }}"
            marker: "{{ shell_marker }}"
            block: "{{ shell_bin_path }}"
            state: present
          loop: "{{ shell_files }}"
          loop_control:
            loop_var: shell_file

    - name: Setup Remove
      when: is_remove
      block:
        - name: Remove from PATH
          ansible.builtin.blockinfile:
            path: "{{ shell_file }}"
            marker: "{{ shell_marker }}"
            block: "{{ shell_bin_path }}"
            state: absent
          loop: "{{ shell_files }}"
          loop_control:
            loop_var: shell_file

        - name: Remove
          become: true
          ansible.builtin.file:
            path: "{{ bin_path }}"
            state: absent
