# this playbook is used to load ssh keys from sops
# make sure `age` key exists in ~/.config/sops/age/keys.txt, sops installed
# for new generation keys, see ./generate.yml

---
- name: SSH Keys from Sops
  vars:
    is_remove: false

    secret_file: "{{ workdir }}/config/secrets.yaml"

  block:
    - name: SSH Keys from Sops > Load global config
      ansible.builtin.set_fact:
        global_config: "{{ lookup('file', workdir + '/config/global.json') | from_json }}"

    - name: SSH Keys from Sops > Load config
      ansible.builtin.set_fact:
        age_key: "{{ global_config['age']['key_path'] }}"
        dir: "{{ global_config['ssh']['dir_path'] }}"
        keys: "{{ global_config['ssh']['keys'] }}"

    - name: SSH Keys from Sops > Setup Load from Sops
      when: not is_remove
      block:

        - name: SSH Keys from Sops > Load secrets
          community.sops.load_vars:
            age_keyfile: "{{ age_key }}"
            file: "{{ secret_file }}"
            name: secrets

        - name: SSH Keys from Sops > Make directory
          ansible.builtin.file:
            path: "{{ dir }}"
            state: directory
            mode: "0755"

        - name: SSH Keys from Sops > Make private keys
          ansible.builtin.copy:
            content: "{{ secrets['ssh_keys'][item.name]['private'] }}"
            dest: "{{ dir }}/id_ed25519_{{ item.name }}"
            mode: "0600"
          with_items: "{{ keys }}"

        - name: SSH Keys from Sops > Make public keys
          ansible.builtin.copy:
            content: "{{ secrets['ssh_keys'][item.name]['public'] }}"
            dest: "{{ dir }}/id_ed25519_{{ item.name }}.pub"
            mode: "0644"
          with_items: "{{ keys }}"

        - name: SSH Keys from Sops > Check config exists
          ansible.builtin.stat:
            path: "{{ dir }}/config"
          register: current_config

        - name: SSH Keys from Sops > Setup config
          when: not current_config.stat.exists
          block:
            - name: SSH Keys from Sops > Make config
              community.general.ssh_config:
                host: "{{ item.host }}"
                hostname: "{{ item.host }}"
                identity_file: "{{ dir }}/id_ed25519_{{ item.name }}"
                ssh_config_file: "{{ dir }}/config"
              with_items: "{{ keys }}"

            - name: SSH Keys from Sops > Config replace /home/<user>
              ansible.builtin.replace:
                path: "{{ dir }}/config"
                regexp: \/home\/[^\/]+
                replace: "~"

    - name: SSH Keys from Sops > Setup Remove
      when: is_remove
      block:
        - name: SSH Keys from Sops > Remove config
          ansible.builtin.file:
            path: "{{ dir }}/config"
            state: absent

        - name: SSH Keys from Sops > Remove public keys
          ansible.builtin.file:
            path: "{{ dir }}/id_ed25519_{{ item.name }}.pub"
            state: absent
          with_items: "{{ keys }}"

        - name: SSH Keys from Sops > Remove private keys
          ansible.builtin.file:
            path: "{{ dir }}/id_ed25519_{{ item.name }}"
            state: absent
          with_items: "{{ keys }}"
